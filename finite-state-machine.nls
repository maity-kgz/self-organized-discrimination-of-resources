to doExplore  
    set stay 0
    set explore 1
    doRandomMove     
end

to doStay
    set stay 1
    set explore 0
    ;set shape "face happy"
    
    ;doRandomMove    
    doMoveInsideResource
    checkForOtherRobots
    ;if isOutsideOfResource
    ;[ doReturnBackToResource ]  
  
end

to doReturnBackToResource
  right 180 forward 1
  if (patch-ahead 1) != nobody[
  if not any? robots-on patch-ahead 1
        [forward 1]]
end



;;-----------helper function ------------------

to doRandomMove
  right random 180
  left random 180
  if (patch-ahead 1) != nobody[
  if not any? robots-on patch-ahead 1
        [forward 1]] 
end

to doMoveInsideResource
  right random 180
  left random 180
  if (patch-ahead 1) != nobody[
  if not any? robots-on patch-ahead 1 and ([shelter-id] of patch-ahead 1)  > 0
        [forward 1]] 
  
end

to checkForOtherRobots  
  ifelse any? robots-on patches in-radius 2.5 [
    ;set robots-encountered robots-encountered + count turtles-on neighbors
    set buddiesAround (count robots-on patches in-radius 2.5) - 1 ;; Why -1? Deduct current robot itself from robots counted in radius. Netlogo counts asking robot too. The distance to or a from a patch is measured from the center of the patch.
    
    set robots-encountered (robots-encountered + (buddiesAround * robotSensingRadius) ) 
    ;;set robots-encountered robots-encountered + buddiesAround 
  ]
  
  [set buddiesAround 0] ;; if not any turtle in radius 1, no buddies around, set to zero, helps to monitor current status of a robot
  ;[ set robots-encountered 0 ]
  
  ;if any? other turtles-here [
   ;   set robots-encountered robots-encountered + 1 
  ;] 
end

to-report isOutsideOfResource
  ifelse shelter-id > 0
  [report false]
  [report true]
end

to-report isFoundResource
  ifelse shelter-id > 0
  [report true ]
  [report false]  
end 


to doCalculateProbabilityToLeaveResource
  
  
  
  if stay = 1
  [
    set robotsDensity robots-encountered / 30
    set robots-encountered 0
    set Q-leave (θ / (1 + ρ * (robotsDensity * robotsDensity) ))
    
    
    ifelse random 100 < (Q-leave * 100) [  ;; https://stackoverflow.com/questions/24157444/checking-probabilities-and-random-numbers-netlogo      
      fd 5  set leaveCounter leaveCounter + 1  set stay 0 set explore 1      
    ]
    [ set stayCounter stayCounter + 1 ]
    
  ;;if (Q-leave < 0.3)
   ;; [set stayCounter stayCounter + 1 ]
  ;;if (Q-leave > 0.7)
    ;;[fd 5  set leaveCounter leaveCounter + 1  set stay 0 set explore 1]
    
    
  ;;if (0.3 < Q-leave and Q-leave < 0.7)
   ;; [ let randomAction one-of [0 1] ; 1 -leave Resource, 0 - stay at Resource
    ;;  ifelse randomAction = 1
     ;; [fd 5  set leaveCounter leaveCounter + 1 set stay 0 set explore 1 ]
      ;;[set stayCounter stayCounter + 1]
    ;;]
       
  
  ]
  
end